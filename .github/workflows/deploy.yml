name: Deploy to VPS

on:
  push:
    branches: [ master ]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            REPO_PATH=${{ secrets.REPO_PATH }}
            if [ -z "$REPO_PATH" ]; then REPO_PATH="/opt/loopmsq"; fi

            sudo mkdir -p "$REPO_PATH"
            sudo chown -R $USER:$USER "$REPO_PATH"
            cd "$REPO_PATH"

            if [ ! -d .git ]; then
              git clone --depth 1 ${{ github.server_url }}/${{ github.repository }} .
            else
              git fetch --all --prune
              git reset --hard origin/master
            fi

            # Write .env from GitHub Secrets
            cat > .env << 'EOF'
POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
JWT_SECRET=${{ secrets.JWT_SECRET }}
JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}
ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
ADMIN_NAME=${{ secrets.ADMIN_NAME }}
ADMIN_PHONE=${{ secrets.ADMIN_PHONE }}
ADMIN_OVERWRITE=${{ secrets.ADMIN_OVERWRITE }}
NEXT_PUBLIC_API_BASE=${{ secrets.NEXT_PUBLIC_API_BASE }}
DATABASE_SYNCHRONIZE=${{ secrets.DATABASE_SYNCHRONIZE }}
EOF

            # Install docker-compose if not present
            if ! command -v docker compose &> /dev/null; then
              sudo apt-get update && sudo apt-get install -y docker-compose-plugin
            fi

            # Bring up services
            docker compose -f docker-compose.prod.yml up -d --build

            # Show status
            docker compose -f docker-compose.prod.yml ps

            # Optional cleanup
            docker system prune -f || true

